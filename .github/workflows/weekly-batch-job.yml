name: weekly-batch-job

#on:
#  schedule:
#    - cron: '0 0 * * 1'

env:
  SERVER_NAME: prod-batch
  APPLICATION_YML: ./server-secret/application-batch.yml
  RESOURCE_PATH: ./cakk-batch/src/main/resources
  AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}

jobs:
  build:
    name: execute batch job
    runs-on: ubuntu-latest
    environment: Cakk-Weekly-Batch

    steps:
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH:mm:ss
          timezone: 'Asia/Seoul'
      - name: Print Current Time
        run: echo "Current Time=${{steps.current-time.outputs.formattedTime}}"
        shell: bash

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.ACTION_KEY }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: corretto

      - name: Copy application.yml
        run: |
          cp ${{ env.APPLICATION_YML }} ${{ env.RESOURCE_PATH }}/application-prod.yml
          ls ${{ env.RESOURCE_PATH }}

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Permission
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: SPRING_PROFILES_ACTIVE=[prod] ./gradlew clean build

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Install AWS SAM CLI
        run: |
          pip install aws-sam-cli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEPLOY_IAM_KEY }}
          aws-secret-access-key: ${{ secrets.DEPLOY_IAM_SECRET }}
          aws-region: ${{ env.AWS_S3_REGION }}

      - name: Deploy lambda function
        run: |
            sam deploy --template-file ./template.yml --stack-name cakk-batch --capabilities CAPABILITY_IAM
