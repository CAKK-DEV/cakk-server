[versions]
#java = 21
kotlin = "2.0.10"
spring = "6.1.5"
spring-boot = "3.2.4"
spring-dependency-management = "1.1.4"
hibernate = "6.4.4.Final"
querydsl = "5.0.0:jakarta"
jwt = "0.11.5"
jackson = "2.18.1"
mockito = "5.14.2"
testcontainers = "1.19.7"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
ktlint = { id = "org.jmailen.kotlinter", version = "3.16.0" }

spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }

[libraries]
# kotlin
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }

# jackson
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
kotlin-jackson = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }

# spring
spring-core = { module = "org.springframework:spring-core", version.ref = "spring" }
spring-context = { module = "org.springframework:spring-context", version.ref = "spring" }
spring-web = { module = "org.springframework:spring-web", version.ref = "spring" }
spring-tx = { module = "org.springframework:spring-tx", version.ref = "spring" }

# basic
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "spring-boot" }
spring-boot-starter-batch = { module = "org.springframework.boot:spring-boot-starter-batch", version.ref = "spring-boot" }
spring-boot-starter-mail = { module = "org.springframework.boot:spring-boot-starter-mail", version.ref = "spring-boot" }

# security
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-starter-oauth = { module = "org.springframework.boot:spring-boot-starter-oauth2-client", version.ref = "spring-boot" }
google-api-client = { module = "com.google.api-client:google-api-client", version = "2.2.0" }
google-api-client-jackson2 = { module = "com.google.api-client:google-api-client-jackson2", version = "2.2.0" }
jwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jwt" }
jwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jwt" }
jwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jwt" }

# db & orm
spring-data-commons = { module = "org.springframework.data:spring-data-commons", version.ref = "spring-boot" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
jts-core = { module = "org.locationtech.jts:jts-core", version = "1.18.2" }
hibernate-core = { module = "org.hibernate:hibernate-core", version.ref = "hibernate" }
hibernate-spatial = { module = "org.hibernate.orm:hibernate-spatial", version.ref = "hibernate" }
jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version = "3.0.0" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version = "3.2.0" }
mysql-connector-java = { module = "com.mysql:mysql-connector-j", version = "8.2.0" }
h2 = { module = "com.h2database:h2", version = "2.3.232" }

# redis
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring-boot" }
spring-boot-starter-redisson = { module = "org.redisson:redisson-spring-boot-starter", version = "3.31.0" }

# log
slf4j = { module = "org.slf4j:slf4j-api", version = "2.0.9" }
h6spy = { module = "com.github.gavlyukovskiy:p6spy-spring-boot-starter", version = "1.9.0" }

# aws
aws-java-sdk = { module = "com.amazonaws:aws-java-sdk-s3", version = "1.12.715" }
aws-serverless = { module = "com.amazonaws.serverless:aws-serverless-java-container-springboot3", version = "2.0.1" }

# slack
slack-webhook = { module = "net.gpedro.integrations.slack:slack-webhook", version = "1.4.0" }

# test
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "spring" }

archunit = { module = "com.tngtech.archunit:archunit-junit5", version = "1.1.0" }

assertj-core = { module = "org.assertj:assertj-core", version = "3.26.3" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version = "5.11.0" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version = "1.11.0" }

mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version = "5.4.0" }

kotest-junit = { module = "io.kotest:kotest-runner-junit5", version = "5.8.0" }

mockk = { module = "io.mockk:mockk", version = "1.13.8" }

fixture-monkey-starter = { module = "com.navercorp.fixturemonkey:fixture-monkey-starter", version = "1.1.3" }

testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-mysql = { module = "org.testcontainers:mysql", version.ref = "testcontainers" }
